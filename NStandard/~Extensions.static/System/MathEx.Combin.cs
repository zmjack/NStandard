// <auto-generated/>
using System;

namespace NStandard;

public static partial class MathEx
{
    /// <summary>
    /// Returns the number of combinations for a given number of items.
    /// </summary>
    /// <param name="number"> The number of items. </param>
    /// <param name="chosen"> The number of items in each combination. </param>
    /// <returns></returns>
    public static int Combin(int number, int chosen)
    {
        if (chosen < 0) throw new ArgumentException("The choice must be greater than zero.", nameof(chosen));
        if (number < chosen) throw new ArgumentException("The total must be greater than or equal to the choice.", nameof(chosen));

        if (chosen == 0 || chosen == number) return 1;
        else return Permut(number, chosen) / Permut(chosen, chosen);
    }

    /// <summary>
    /// Returns the number of combinations for a given number of items.
    /// </summary>
    /// <param name="number"> The number of items. </param>
    /// <param name="chosen"> The number of items in each combination. </param>
    /// <returns></returns>
    public static long Combin(long number, long chosen)
    {
        if (chosen < 0) throw new ArgumentException("The choice must be greater than zero.", nameof(chosen));
        if (number < chosen) throw new ArgumentException("The total must be greater than or equal to the choice.", nameof(chosen));

        if (chosen == 0 || chosen == number) return 1;
        else return Permut(number, chosen) / Permut(chosen, chosen);
    }
}

